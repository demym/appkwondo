{"version":3,"sources":["../../../src/@ionic-native/plugins/native-page-transitions/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,MAAA,EAAQ,OAAA,EAAS,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AAiBxE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4CG;AASH;IAA2C,yCAAiB;IAA5D;;IAgEA,CAAC;IA/DC;;;;OAIG;IAEH,qCAAK,GAAL,UAAM,OAAgC,IAAkB,MAAM,CAAC,CAAC,CAAC;IAEjE;;;;OAIG;IAEH,oCAAI,GAAJ,UAAK,OAAgC,IAAkB,MAAM,CAAC,CAAC,CAAC;IAEhE;;;;OAIG;IAEH,oCAAI,GAAJ,UAAK,OAAgC,IAAkB,MAAM,CAAC,CAAC,CAAC;IAGhE;;;;OAIG;IAEH,sCAAM,GAAN,UAAO,OAAgC,IAAkB,MAAM,CAAC,CAAC,CAAC;IAIlE;;;;OAIG;IAEH,oCAAI,GAAJ,UAAK,OAAgC,IAAkB,MAAM,CAAC,CAAC,CAAC;IAEhE;;;OAGG;IAEH,wDAAwB,GAAxB,cAA2C,MAAM,CAAC,CAAC,CAAC;IAEpD;;;OAGG;IAEH,uDAAuB,GAAvB,cAA0C,MAAM,CAAC,CAAC,CAAC;IAE9C,gCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,oCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IAxDA;QADC,OAAO,EAAE;;;;sDACuD;IAQjE;QADC,OAAO,EAAE;;;;qDACsD;IAQhE;QADC,OAAO,CAAC,EAAE,SAAS,EAAE,CAAC,KAAK,EAAE,SAAS,CAAC,EAAE,CAAC;;;;qDACqB;IAShE;QADC,OAAO,CAAC,EAAE,SAAS,EAAE,CAAC,KAAK,EAAE,SAAS,CAAC,EAAE,CAAC;;;;uDACuB;IAUlE;QADC,OAAO,CAAC,EAAE,SAAS,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;;;;qDACgC;IAOhE;QADC,OAAO,EAAE;;;;yEAC0C;IAOpD;QADC,OAAO,EAAE;;;;wEACyC;IAxDxC,qBAAqB;QARjC,MAAM,CAAC;YACN,UAAU,EAAE,uBAAuB;YACnC,MAAM,EAAE,2CAA2C;YACnD,SAAS,EAAE,+BAA+B;YAC1C,IAAI,EAAE,mEAAmE;YACzE,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,EAAE,iBAAiB,CAAC;SACjD,CAAC;OAEW,qBAAqB,CAgEjC;IAAD,4BAAC;CAhED,AAgEC,CAhE0C,iBAAiB,GAgE3D;SAhEY,qBAAqB","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\r\n\r\nexport interface NativeTransitionOptions {\r\n  direction?: string;\r\n  duration?: number;\r\n  slowdownfactor?: number;\r\n  slidePixels?: number;\r\n  iosdelay?: number;\r\n  androiddelay?: number;\r\n  winphonedelay?: number;\r\n  fixedPixelsTop?: number;\r\n  fixedPixelsBottom?: number;\r\n  action?: string;\r\n  origin?: string;\r\n  href?: string;\r\n}\r\n\r\n/**\r\n * @name Native Page Transitions\r\n * @description\r\n * The Native Page Transitions plugin uses native hardware acceleration to animate your transitions between views. You have complete control over the type of transition, the duration, and direction.\r\n *\r\n * @usage\r\n * ```typescript\r\n * import { NativePageTransitions, NativeTransitionOptions } from '@ionic-native/native-page-transitions';\r\n *\r\n * constructor(private nativePageTransitions: NativePageTransitions) { }\r\n *\r\n * ...\r\n *\r\n *\r\n * // example of adding a transition when a page/modal closes\r\n * ionViewWillLeave() {\r\n *\r\n *  let options: NativeTransitionOptions = {\r\n *     direction: 'up',\r\n *     duration: 500,\r\n *     slowdownfactor: 3,\r\n *     slidePixels: 20,\r\n *     iosdelay: 100,\r\n *     androiddelay: 150,\r\n *     fixedPixelsTop: 0,\r\n *     fixedPixelsBottom: 60\r\n *    };\r\n *\r\n *  this.nativePageTransitions.slide(options)\r\n *    .then(onSuccess)\r\n *    .catch(onError);\r\n *\r\n * }\r\n *\r\n *\r\n * // example of adding a transition when pushing a new page\r\n * openPage(page: any) {\r\n *\r\n *   this.nativePageTransitions.slide(options);\r\n *   this.navCtrl.push(page);\r\n *\r\n * }\r\n *\r\n * ```\r\n */\r\n@Plugin({\r\n  pluginName: 'NativePageTransitions',\r\n  plugin: 'com.telerik.plugins.nativepagetransitions',\r\n  pluginRef: 'plugins.nativepagetransitions',\r\n  repo: 'https://github.com/Telerik-Verified-Plugins/NativePageTransitions',\r\n  platforms: ['Android', 'iOS', 'Windows Phone 8']\r\n})\r\n\r\nexport class NativePageTransitions extends IonicNativePlugin {\r\n  /**\r\n   * Perform a slide animation\r\n   * @param options {NativeTransitionOptions} Options for the transition\r\n   * @returns {Promise<any>}\r\n   */\r\n  @Cordova()\r\n  slide(options: NativeTransitionOptions): Promise<any> { return; }\r\n\r\n  /**\r\n   * Perform a flip animation\r\n   * @param options {NativeTransitionOptions} Options for the transition\r\n   * @returns {Promise<any>}\r\n   */\r\n  @Cordova()\r\n  flip(options: NativeTransitionOptions): Promise<any> { return; }\r\n\r\n  /**\r\n   * Perform a fade animation\r\n   * @param options {NativeTransitionOptions} Options for the transition\r\n   * @returns {Promise<any>}\r\n   */\r\n  @Cordova({ platforms: ['iOS', 'Android'] })\r\n  fade(options: NativeTransitionOptions): Promise<any> { return; }\r\n\r\n\r\n  /**\r\n   * Perform a slide animation\r\n   * @param options {NativeTransitionOptions} Options for the transition\r\n   * @returns {Promise<any>}\r\n   */\r\n  @Cordova({ platforms: ['iOS', 'Android'] })\r\n  drawer(options: NativeTransitionOptions): Promise<any> { return; }\r\n\r\n\r\n\r\n  /**\r\n   * Perform a slide animation\r\n   * @param options {NativeTransitionOptions} Options for the transition\r\n   * @returns {Promise<any>}\r\n   */\r\n  @Cordova({ platforms: ['iOS'] })\r\n  curl(options: NativeTransitionOptions): Promise<any> { return; }\r\n\r\n  /**\r\n   * Execute pending transition\r\n   * @returns {Promise<any>}\r\n   */\r\n  @Cordova()\r\n  executePendingTransition(): Promise<any> { return; }\r\n\r\n  /**\r\n   * Cancel pending transition\r\n   * @returns {Promise<any>}\r\n   */\r\n  @Cordova()\r\n  cancelPendingTransition(): Promise<any> { return; }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}